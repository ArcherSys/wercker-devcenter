---
sidebar_current: "werckeryml"
---

  <script type="text/javascript" src="/assets/validate-yaml/wercker-schema.js" ></script>
  <script type="text/javascript" src="/assets/validate-yaml/js/jquery-2.0.2.min.js" ></script>
  <script type="text/javascript" src="/assets/validate-yaml/js/underscore-min.js" ></script>
  <script type="text/javascript" src="/assets/validate-yaml/js/async.js" ></script>
  <script type="text/javascript" src="/assets/validate-yaml/js/JSV/uri/uri.js" ></script>
  <script type="text/javascript" src="/assets/validate-yaml/js/JSV/uri/schemes/urn.js" ></script>
  <script type="text/javascript" src="/assets/validate-yaml/js/JSV/jsv.js" ></script>
  <script type="text/javascript" src="/assets/validate-yaml/js/JSV/json-schema-draft-03.js" ></script>
  <script type="text/javascript" src="/assets/validate-yaml/js/js-yaml.js" ></script>

 <script>

    function makeSummary (box, buildSteps) {
      var result = "<span class='summary__header'>Your wercker.yml will use the box <strong>" + box.name + "</strong></span>" +
        "<span><em>Description: </em> " + box.description + "</span>" ;

      _.each(buildSteps, function (buildStep) {
        result += "<span><em>" + buildStep.name + ": </em>" + buildStep.description + "</span>"
      })

      $("#summary").html(result);
      createPipeline(box,buildSteps);
    }
    function createPipeline (box, buildSteps) {
      $("#box-name").html("");
      $("#build-steps").html("");


      _.each(buildSteps, function (buildStep) {
        $("<span class=\"step\">").html('<i class="icon-down_arrows"></i>' + buildStep.name).appendTo("#build-steps");
      })

      $("#box-name").html(box.name);
    }

    function showError (message) {
      $("#errors").html(message);
    }

    function getBox (fullname, callback) {
      var boxName = fullname;
      var boxVersion = "*"
      if(boxName.split("@").length > 1){
        boxName = fullname.split("@")[0]
        boxVersion = fullname.split("@")[1]
      }

      $.getJSON("http://app.wercker.com/api/v2/boxes/" + boxName + "/" + boxVersion + "?callback=?",function  (data) {
        callback(null, data);
      }).fail(function  (error) {
        if(error.status === 404){
          callback(null, null);
        }
        else{
          callback(error)
        }
      });
    }

    function getStep (fullname, callback) {
      if(!_.isString(fullname)){
        try{
          fullname = Object.keys(fullname)[0];
        }
        catch(e){
          console.log(e);
          callback(e)
        }
      }

        var stepName = fullname;
      var stepVersion = "*"
      if(stepName.split("@").length > 1){
        stepName = fullname.split("@")[0]
        stepVersion = fullname.split("@")[1]
      }
      if(stepName.indexOf("/") === -1){
        stepName = "wercker/" + stepName;
      }

      $.getJSON("http://app.wercker.com/api/v2/steps/" + stepName + "/" + stepVersion + "?callback=?",function  (data) {
        callback(null, data);
      }).fail(function  (error) {
        if(error.status === 404){
          callback(null, null);
        }
        else{
          callback(error)
        }
      });
    }

    $(function () {

      $("#check-button").on("click", function () {
        $("#errors").html("");
        $("#summary").html("");
        var yaml = $("#wercker-yml-input").val();
        var doc = {};
        try{
          doc = jsyaml.load(yaml);
        }
        catch(error){
          return $("#errors").html(error.message.replace("\n","</br>"));
        }
        var environmentId = "json-schema-draft-03";
        var environment = JSV.createEnvironment(environmentId);
      var report = environment.validate(doc, schema);
      if(report.errors.length !== 0){
        var errorMessage = "";
        _.each(report.errors, function (error) {
          console.log(error)
          var elementName = error.schemaUri.replace("http://jsonschema.net", "").replace("#", "")
          if(elementName === ""){
            elementName = "root";
          }
          errorMessage += error.message + ": " + elementName + "\n";
        });
        errorMessage = errorMessage.replace("\n","</br>");
        return $("#errors").html(errorMessage);
      }

      var boxName = doc.box;
      var boxVersion = "*"
      if(boxName.split("@").length > 1){
        boxName = doc.box.split("@")[0]
        boxVersion = doc.box.split("@")[1]
      }


      getBox(doc.box, function  (error, boxData) {
        if(error){
          return showError(JSON.stringify(error))
        }
        if(!boxData){
          return showError("Box '" + doc.box + "' does not exist in de the registry.")
        }

        buildSteps = []

        if(doc && doc.build && doc.build.steps ){
          async.eachSeries(doc.build.steps, function (step, eachNext) {

            if(!_.isString(step)){
              try{
                step = Object.keys(step)[0];
              }
              catch(e){
                return eachNext(e);
              }
            }
            if(step === "script"){
              buildSteps.push({name : "script", description : "Runs your script defined in code element."})
              return eachNext()
            }

            getStep(step, function  (error, stepData) {
              if(error){
                return eachNext(error);
              }
              if(!stepData){
                return showError("Step '" + step + "' does not exist in the registry.");
              }
              buildSteps.push(stepData);
              eachNext()
            })

          }, function (error) {
                        makeSummary(boxData, buildSteps);
          })

        }
        else{
          makeSummary(boxData, [])
        }

      })


      })


    })
 </script>

<div class="validate">

  <h1>Validate wercker.yml</h1>

  <textarea class="validate__area" id="wercker-yml-input">box: wercker/default
  build:
    steps:
      - jshint
      - script:
          code: echo 1
  </textarea>

  <button class="button medium radius text-center" id="check-button">Check my wercker.yml</button>

  <hr/>

  <h3>Errors</h3>
  <div class="validate__feedback" id="errors"></div>
  <hr/>
  <h3>Summary</h3>
  <div class="validate__feedback" id="summary"></div>
  <hr/>
  <h3>Pipeline</h3>
  <div class="validate__pipeline" id="pipeline">
    <span class="step">get code<i class="icon-down_arrows"></i></span>
    <div class="box">
      <span class="box-label" id="box-name">boxname</span>
      <div class="box-steps">
        <span class="step">setup environment<i class="icon-down_arrows"></i></span>
        <span class="step">environment variables<i class="icon-down_arrows"></i></span>
        <span id="build-steps"></span>
        <span class="step">package</span>
      </div>
    </div>
  </div>
</div>
<hr/>
<div class="authorCredits">
    <span class="profile-picture">
        <img src="https://secure.gravatar.com/avatar/37936f9de593de18c525a8e2f5707834?d=identicon&s=192" alt="Micha Hernandez van Leuffen"/>
    </span>
    <ul class="authorCredits">

        <!-- author info -->
        <li class="authorCredits__name">
            <h4>Wouter Mooij</h4>
            <em>
                Wouter is cofounder and CTO at wercker.
            </em>
        </li>

        <!-- info -->
        <li>
            <a href="http://beta.wercker.com" target="_blank">
                <i class="icon-company"></i> <em>wercker</em>
            </a>
            <a href="http://twitter.com/wwwouter" target="_blank">
                <i class="icon-twitter"></i>
                <em> wwwouter</em>
            </a>
        </li>

    </ul>
</div>
<hr/>
<h5>Oct 29, 2013</h5>
<hr/>

